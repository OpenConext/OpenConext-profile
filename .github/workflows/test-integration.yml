name: test-integration
on:
  push:
    branches:
      - master
  pull_request:
  # run at 6 hour UTC
  schedule:
    - cron: "0 6 * * *"
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      PROD_PHP: php72
      DOCKER_COMPOSE: docker-compose -f ../docker-compose.yml
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Restore Composer cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Init environment
        run: cd docker && ./init.sh && cat .env
      - name: Build Docker environmnent
        if: always()
        run: |
          cd docker &&
          ${DOCKER_COMPOSE} up -d --build --force-recreate &&
          docker-compose exec -T php-fpm sh -c '
              SYMFONY_ENV=test composer install --prefer-dist -n -o && \
              ./bin/console cache:clear --env=test && \
              npm run build
          '
      - name: Run code quality tests
        if: always()
        run: |
          cd docker && docker-compose exec -T php-fpm sh -c '
              echo -e "\nPHP Mess Detector\n" && \
              ./vendor/bin/phpmd src text phpmd.xml --exclude */Tests/* && \
              echo -e "\nPHP CodeSniffer\n" && \
              ./vendor/bin/phpcs --report=full --standard=phpcs.xml --warning-severity=0 --extensions=php src
          '
        env:
          SYMFONY_ENV: test
      - name: Run unit tests
        if: always()
        run: |
          cd docker && APP_ENV=test docker-compose exec -T php-fpm sh -c '
              echo -e "\nPHPUnit unit tests\n" && \
              ./vendor/bin/phpunit --configuration=./tests/phpunit.xml --testsuite=unit --coverage-text
          '
        env:
          SYMFONY_ENV: test
      - name: Show log on failure
        if: failure()
        run:  |
          cd docker && docker-compose exec -T php-fpm cat var/logs/test/test.log
